{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "ONTAP Cloud Single - Cloud Manager 3.2",

    "Parameters": {
        "CompanyName": {
            "Type": "String",
            "MinLength": "4",
            "Description": "Company name",
            "MaxLength": "35",
            "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9_]*",
            "ConstraintDescription" : "Must start with alphabetic character and contains only numbers, letters or underscore (_) and up to 35 characters"
        },
        "VPCId": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "Target VPC for CloudManager and ONTAP Cloud"
        },
        "SubnetId": {
            "Type": "AWS::EC2::Subnet::Id",
            "Description": "SubnetID for ONTAP Cloud"
        },
        "KeyPair": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Description": "CloudManager instance will be launched with this KeyPair"
        },
        "CloudManagerUserEmail": {
            "Type": "String",
            "Description": "Email address will be used to login to Cloud Manager"
        },
        "CloudManagerPassword": {
            "Type": "String",
            "Description": "Password will be used to login to Cloud Manager and ONTAP Cloud",
            "NoEcho": "true",
            "MinLength": "4",
            "MaxLength": "20",
            "ConstraintDescription": "Password Min length is 4 and max length is 20"
        },
        "RemoteAccessCIDR" : {
            "Description" : "CloudManager web access will be allowed from this CIDR range (example for full access: 0.0.0.0/0)",
            "Type" : "String",
            "MinLength": "9",
            "MaxLength": "18",            
            "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription" : "Must be a valid CIDR range of the form x.x.x.x/x."
        },
        "AUniqueName": {
            "Type": "String",
            "Description": "A unique name to be used to identify the AWS resources deployed as part of this template (i.e. use the StackName)"
        },
		 "QSS3BucketName": {
			"AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
			"ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
			"Default": "quickstart-reference",
			"Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
			"Type": "String"
		},
		"QSS3KeyPrefix": { 
		  "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
		  "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with a forward slash (/), which is automatically appended.",
		  "Default": "netapp/ontapcloud/sql/latest",
		  "Description": "S3 key prefix for the Quick Start assets. This prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with a forward slash (/), which is automatically appended.",
		  "Type": "String"
		}
    },

    "Mappings": {
      "AWSAMIRegionMap": {
        "AMI": {
          "NETAPPOCCM": "OnCommandCloudManager-3.2.0-Marketplace- 06/02/2017_105843-d9adb18b-c57c-4615-9bb7-a9c64efd69b1-ami-d45094c2.3"
        },
        "ap-northeast-1": {
          "NETAPPOCCM": "ami-21abeb46"
        },
        "ap-northeast-2": {
          "NETAPPOCCM": "ami-1e61b070"
        },
        "ap-south-1": {
          "NETAPPOCCM": "ami-08443567"
        },
        "ap-southeast-1": {
          "NETAPPOCCM": "ami-432e9a20"
        },
        "ap-southeast-2": {
          "NETAPPOCCM": "ami-d8aaacbb"
        },
        "ca-central-1": {
          "NETAPPOCCM": "ami-f8b8059c"
        },
        "eu-central-1": {
          "NETAPPOCCM": "ami-b7c20ad8"
        },
        "eu-west-1": {
          "NETAPPOCCM": "ami-8dd7f2eb"
        },
        "eu-west-2": {
          "NETAPPOCCM": "ami-6f73660b"
        },
        "sa-east-1": {
          "NETAPPOCCM": "ami-b0c3a7dc"
        },
        "us-east-1": {
          "NETAPPOCCM": "ami-6c65a27a"
        },
        "us-east-2": {
          "NETAPPOCCM": "ami-4811342d"
        },
        "us-west-1": {
          "NETAPPOCCM": "ami-e63a6686"
        },
        "us-west-2": {
          "NETAPPOCCM": "ami-68e96c08"
        }
      },
	  "AWSInfoRegionMap": {
            "ap-northeast-1": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "ap-northeast-2": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "ap-south-1": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "ap-southeast-1": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "ap-southeast-2": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "eu-central-1": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "eu-west-1": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "sa-east-1": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "us-east-1": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "us-east-2": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "us-west-1": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" },
            "us-west-2": { "Partition": "aws", "QuickStartS3URL": "https://s3.amazonaws.com" }
        }
    },

    "Resources": {
        "OCCMInstanceIAMRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                "Statement": [{
                    "Action": [ "sts:AssumeRole" ],
                    "Effect": "Allow",
                    "Principal": { "Service": [ "ec2.amazonaws.com" ] }
                }],
                "Version": "2012-10-17"
            },
            "Path": "/",
            "Policies": [{
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                              "ec2:DescribeInstances",
                              "ec2:DescribeInstanceStatus",
                              "ec2:RunInstances",
                              "ec2:ModifyInstanceAttribute",
                              "ec2:DescribeRouteTables",
                              "ec2:DescribeImages",
                              "ec2:CreateTags",
                              "ec2:CreateVolume",
                              "ec2:DescribeVolumes",
                              "ec2:ModifyVolumeAttribute",
                              "ec2:DeleteVolume",
                              "ec2:CreateSecurityGroup",
                              "ec2:DeleteSecurityGroup",
                              "ec2:DescribeSecurityGroups",
                              "ec2:RevokeSecurityGroupEgress",
                              "ec2:AuthorizeSecurityGroupEgress",
                              "ec2:AuthorizeSecurityGroupIngress",
                              "ec2:CreateNetworkInterface",
                              "ec2:DescribeNetworkInterfaces",
                              "ec2:DeleteNetworkInterface",
                              "ec2:ModifyNetworkInterfaceAttribute",
                              "ec2:DescribeSubnets",
                              "ec2:DescribeVpcs",
                              "ec2:DescribeDhcpOptions",
                              "ec2:CreateSnapshot",
                              "ec2:DeleteSnapshot",
                              "ec2:DescribeSnapshots",
                              "ec2:GetConsoleOutput",
                              "ec2:DescribeKeyPairs",
                              "ec2:DescribeRegions",
                              "ec2:DeleteTags",
                              "ec2:DescribeTags",
                              "cloudformation:CreateStack",
                              "cloudformation:DeleteStack",
                              "cloudformation:DescribeStacks",
                              "cloudformation:DescribeStackEvents",
                              "cloudformation:ValidateTemplate",
                              "iam:PassRole",
                              "iam:CreateRole",
                              "iam:DeleteRole",
                              "iam:PutRolePolicy",
                              "iam:CreateInstanceProfile",
                              "iam:DeleteRolePolicy",
                              "iam:AddRoleToInstanceProfile",
                              "iam:RemoveRoleFromInstanceProfile",
                              "iam:DeleteInstanceProfile",
                              "kms:List*",
                              "kms:Describe*"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ec2:StartInstances",
                                "ec2:StopInstances",
                                "ec2:TerminateInstances",
                                "ec2:AttachVolume",
                                "ec2:DetachVolume"
                            ],
                            "Condition": {
                                "StringLike": {
                                    "ec2:ResourceTag/WorkingEnvironment": "*"
                                }
                            },
                            "Resource": [
                                "arn:aws:ec2:*:*:instance/*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ec2:AttachVolume",
                                "ec2:DetachVolume"
                            ],
                            "Resource": [
                                "arn:aws:ec2:*:*:volume/*"
                            ]
                        }
                    ]
                },
                "PolicyName": {"Fn::Join": [ "", [ { "Ref": "AUniqueName" }, "-OCCMPolicy" ] ]}
            }]
          },
          "Type": "AWS::IAM::Role"
        },

        "OCCMInstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [{ "Ref": "OCCMInstanceIAMRole" } ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },

        "OCCMSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Default group for NetApp CloudManager",
                "VpcId": {
                    "Ref": "VPCId"
                },
                "SecurityGroupIngress": [
                    { "IpProtocol": "tcp", "FromPort": "80", "ToPort": "80", "CidrIp": { "Ref": "RemoteAccessCIDR" } },
                    { "IpProtocol": "tcp", "FromPort": "443", "ToPort": "443", "CidrIp": { "Ref": "RemoteAccessCIDR" } },
                    { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": { "Ref": "RemoteAccessCIDR" } }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {"Fn::Join": [ "", [ { "Ref": "AUniqueName" }, "-SG" ] ]}
                    }
                ]
            }
        },			
      
		"OTCCompleteHandle" : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },

        "OTCSetupCompleteCondition" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "OCCMInstance",
            "Properties" : {
                 "Handle"  : { "Ref" : "OTCCompleteHandle" },
                 "Timeout" : "2400",
                 "Count"   : "1"
            }
        },

        "OTCCompleteHandle2" : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },

        "OTCSetupCompleteCondition2" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "OCCMInstance",
            "Properties" : {
                 "Handle"  : { "Ref" : "OTCCompleteHandle2" },
                 "Timeout" : "2400",
                 "Count"   : "1"
            }
        },

        "OTCCompleteHandle3" : {
            "Type" : "AWS::CloudFormation::WaitConditionHandle"
        },

        "OTCSetupCompleteCondition3" : {
            "Type" : "AWS::CloudFormation::WaitCondition",
            "DependsOn" : "OCCMInstance",
            "Properties" : {
                 "Handle"  : { "Ref" : "OTCCompleteHandle3" },
                 "Timeout" : "2400",
                 "Count"   : "1"
            }
        },
      
        "OCCMInstance": {
            "DependsOn": [
                "OCCMSecurityGroup", "OCCMInstanceProfile"
            ],
            "Type": "AWS::EC2::Instance", 
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"config": {
                        "files": {
						"/tmp/occm-params.txt": {
                           "content": {
								"Fn::Join":	[
                                        "",
                                        [
                                            "name|",
                                            {
                                                 "Ref": "AUniqueName" 
                                            },
                                            "\n",
                                            "customer|",
                                            {
                                                "Ref": "CompanyName"
                                            },
                                            "\n",
                                            "vpcID|",
                                            {
                                                "Ref": "VPCId"
                                            },
                                            "\n",
                                            "subnetID|",
                                            {
                                                "Ref": "SubnetId"
                                            },
                                            "\n",
                                            "region|",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "adminEmail|",
                                            {
                                                "Ref": "CloudManagerUserEmail"
                                            },
                                            "\n",
                                            "adminPassword|",
                                            {
                                                "Ref": "CloudManagerPassword"
                                            },
                                            "\n",
                                            "svmPassword|",
                                            {
                                                "Ref": "CloudManagerPassword"
                                            },
                                            "\n"
                                        ]
                                    ]
								},
								"mode": "000440",
                                "owner": "root",
                                "group": "root"
							},
						"/tmp/setup_OTC.sh": {
                            "source": {
                                "Fn::Join": [
                                 "",
                                  [
                                     "https://",
                                      {
                                          "Ref": "QSS3BucketName"
                                      },
                                            ".s3.amazonaws.com/",
                                      {
                                           "Ref": "QSS3KeyPrefix"
                                       },
                                       "/scripts/setup_OTC.sh"
                                    ]
                                 ]
                                },
                                "mode": "000644",
                                "owner": "root",
                                "group": "root"
                            }
						}
					}
				}
			},           
            "Properties": {
                "DisableApiTermination": "FALSE",
                "ImageId": {
                    "Fn::FindInMap": [ "AWSAMIRegionMap", { "Ref": "AWS::Region" }, "NETAPPOCCM" ]
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "True",
                        "DeleteOnTermination": "True",
                        "SubnetId": { "Ref": "SubnetId" }, "DeviceIndex": "0",
                        "GroupSet": [ { "Ref": "OCCMSecurityGroup" } ] }
                ],
                "InstanceType": "t2.medium",
                "IamInstanceProfile": { "Ref": "OCCMInstanceProfile" },
                "KeyName": { "Ref": "KeyPair" },
                "Monitoring": "false", 
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash -xe",
                                "sudo -s",
                                "export PATH=$PATH:/usr/local/aws/bin/",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz",
								{"Fn::Join": [ "", [ "region=", { "Ref": "AWS::Region" } ] ]},
                                {"Fn::Join": [ "", [ "otcTemplateHandle=", { "Fn::Base64": { "Ref": "OTCCompleteHandle" } } ] ]},
                                {"Fn::Join": [ "", [ "otcTemplateHandle2=", { "Fn::Base64": { "Ref": "OTCCompleteHandle2" } } ] ]},
                                {"Fn::Join": [ "", [ "otcTemplateHandle3=", { "Fn::Base64": { "Ref": "OTCCompleteHandle3" } } ] ]},
								{"Fn::Join": [ "", [ "stackName=", { "Ref": "AWS::StackName" } ] ]},
								
                                "wget -O /usr/bin/jq http://stedolan.github.io/jq/download/linux64/jq",
                                "sleep 5",
                                "chmod +x /usr/bin/jq",

                                "cfn-init -v  --stack ${stackName} --resource OCCMInstance --region ${region}",

								"if [ -e /tmp/setup_OTC.sh -a -e /tmp/occm-params.txt ] ; then",
									"# Call setup_OTC.sh",
									"chmod a+x /tmp/setup_OTC.sh",
									"/tmp/setup_OTC.sh /tmp/occm-params.txt",
									"rm /tmp/occm-params.txt",
								"else",
									"cfn-signal -e 1 -r \"Error downloading bootstrap files\" --region ${region} ${otcTemplateHandle}",
									"rm /tmp/occm-params.txt",
									"exit 1",
								"fi",

								"if [ -f /tmp/occmError.txt ]; then",
									"cfn-signal -e 1 -r \"`cat ${errorFile}`\" --region ${region} ${otcTemplateHandle}",
									"rm /tmp/occm-params.txt",
									"exit 1",
								"else",
									"cfn-signal -d \"`cat /tmp/clusterLif.txt`\" -i ClusterLif --region ${region} ${otcTemplateHandle2}",
									"cfn-signal -d \"`cat /tmp/iscsiLif.txt`\" -i IscsiLif --region ${region} ${otcTemplateHandle}",
									"cfn-signal -d \"`cat /tmp/nasLif.txt`\" -i NasLif --region ${region} ${otcTemplateHandle3}\n",
									"rm /tmp/occm-params.txt",
								"fi"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {"Fn::Join": [ "", [ { "Ref": "AUniqueName" }, "_CloudManager" ] ]}
                    },
                    {
                        "Key": "CloudFormation Stack",
                        "Value": { "Ref": "AWS::StackName" }
                    }
                ]
            }
        }
    },
   
    "Outputs": {
        "OCCMInstanceId": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value": { "Ref": "OCCMInstance" }
        },
        "OCCMInstanceProfile": {
            "Description": "Instance profile used by CloudManager",
            "Value": { "Ref": "OCCMInstanceProfile" }
        },
        "CloudManagerURL" : {
            "Value" : {"Fn::Join": [ "", [ "http://", { "Fn::GetAtt" : [ "OCCMInstance", "PublicIp" ]} ] ]},
            "Description" : "CloudManager URL"
        },
        "ONTAPCloudSvmName" : {
            "Value" : {"Fn::Join": [ "", [ "svm_", {"Fn::Join": [ "", [ { "Ref": "AUniqueName" }, "_OTC" ] ]} ] ]},
            "Description" : "ONTAP Cloud SVM Name"
        },
        "IscsiDataLif" : {
            "Value" : { "Fn::GetAtt" : [ "OTCSetupCompleteCondition", "Data" ] }, 
            "Description" : "IP address of the iSCSI Data LIF"
        },
        "ClusterManagementLif" : {
            "Value" : { "Fn::GetAtt" : [ "OTCSetupCompleteCondition2", "Data" ] }, 
            "Description" : "IP address of the Cluster Management LIF" 
        },
        "NasDataLif" : {
            "Value" : { "Fn::GetAtt" : [ "OTCSetupCompleteCondition3", "Data" ] }, 
            "Description" : "IP address of the NAS Data LIF" 
        }          
    }
}