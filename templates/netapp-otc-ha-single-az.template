{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "ONTAP Cloud HA Single AZ - Cloud Manager 3.3",
    "Parameters": {
        "CloudManagerPassword": {
            "ConstraintDescription": "Password Min length is 4 and max length is 20",
            "Description": "Password will be used to login to Cloud Manager and ONTAP Cloud",
            "MaxLength": "20",
            "MinLength": "4",
            "NoEcho": "true",
            "Type": "String"
        },
        "CloudManagerUserEmail": {
            "Description": "Email address will be used to login to Cloud Manager",
            "Type": "String"
        },
        "CompanyName": {
            "AllowedPattern": "[a-zA-Z][a-zA-Z0-9_]*",
            "ConstraintDescription": "Must start with alphabetic character and contains only numbers, letters or underscore (_) and up to 35 characters",
            "Description": "Company name. Should start with alphabetic character and contains only numbers, letters or underscore (_) and up to 35 characters",
            "MaxLength": "35",
            "MinLength": "4",
            "Type": "String"
        },
        "KeyPair": {
            "Description": "CloudManager instance will be launched with this KeyPair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "otc-ha-quickstart-test",
            "Description": "S3 bucket name for the Quick Start assets. This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-]+(/[0-9a-zA-Z-]+)*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with a forward slash (/), which is automatically appended.",
            "Default": "netapp/ontapcloud/ha/latest",
            "Description": "S3 key prefix for the Quick Start assets. This prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/). It cannot start or end with a forward slash (/), which is automatically appended.",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid CIDR range of the form x.x.x.x/x.",
            "Description": "CloudManager web access will be allowed from this CIDR range (example for full access: 0.0.0.0/0)",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        },
        "SubnetId": {
            "Description": "SubnetID for ONTAP Cloud",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "VPCId": {
            "Description": "Target VPC for CloudManager and ONTAP Cloud",
            "Type": "AWS::EC2::VPC::Id"
        },
        "Capacity": {
            "Type": "Number",
            "Description": "The Volume capacity in GB (up to 2000 GB)",
            "MinValue": "10",
            "MaxValue": "2000",
        "Default" : "100",
            "ConstraintDescription": "Initial volume capacity must be between 10 to 2000 GB"
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "NETAPPOCCM": "OnCommandCloudManager-3.3.0-Marketplace- 06/02/2017_105843-d9adb18b-c57c-4615-9bb7-a9c64efd69b1-ami-d45094c2.3"
            },
            "ap-northeast-1": {
                "NETAPPOCCM": "ami-8e979ee9"
            },
            "ap-northeast-2": {
                "NETAPPOCCM": "ami-2e8d5240"
            },
            "ap-south-1": {
                "NETAPPOCCM": "ami-c2bdc2ad"
            },
            "ap-southeast-1": {
                "NETAPPOCCM": "ami-b89c1edb"
            },
            "ap-southeast-2": {
                "NETAPPOCCM": "ami-cb3322a8"
            },
            "ca-central-1": {
                "NETAPPOCCM": "ami-38e9565c"
            },
            "eu-central-1": {
                "NETAPPOCCM": "ami-975bfff8"
            },
            "eu-west-1": {
                "NETAPPOCCM": "ami-bf9986d9"
            },
            "eu-west-2": {
                "NETAPPOCCM": "ami-fba8bf9f"
            },
            "sa-east-1": {
                "NETAPPOCCM": "ami-982843f4"
            },
            "us-east-1": {
                "NETAPPOCCM": "ami-392c0a2f"
            },
            "us-east-2": {
                "NETAPPOCCM": "ami-98a98ffd"
            },
            "us-west-1": {
                "NETAPPOCCM": "ami-379ebc57"
            },
            "us-west-2": {
                "NETAPPOCCM": "ami-0258537b"
            }
        },
        "AWSInfoRegionMap": {
            "ap-northeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-northeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-south-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "ap-southeast-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-central-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "eu-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "sa-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-east-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-1": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            },
            "us-west-2": {
                "Partition": "aws",
                "QuickStartS3URL": "https://s3.amazonaws.com"
            }
        }
    },
    "Resources": {
        "OCCMInstanceIAMRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:ListInstanceProfiles",
                                        "iam:CreateRole",
                                        "iam:DeleteRole",
                                        "iam:PutRolePolicy",
                                        "iam:CreateInstanceProfile",
                                        "iam:DeleteRolePolicy",
                                        "iam:AddRoleToInstanceProfile",
                                        "iam:RemoveRoleFromInstanceProfile",
                                        "iam:DeleteInstanceProfile",
                                        "ec2:ModifyVolumeAttribute",
                                        "sts:DecodeAuthorizationMessage",
                                        "ec2:DescribeImages",
                                        "ec2:DescribeRouteTables",
                                        "ec2:DescribeInstances",
                                        "iam:PassRole",
                                        "ec2:DescribeInstanceStatus",
                                        "ec2:RunInstances",
                                        "ec2:ModifyInstanceAttribute",
                                        "ec2:CreateTags",
                                        "ec2:CreateVolume",
                                        "ec2:DescribeVolumes",
                                        "ec2:DeleteVolume",
                                        "ec2:CreateSecurityGroup",
                                        "ec2:DeleteSecurityGroup",
                                        "ec2:DescribeSecurityGroups",
                                        "ec2:RevokeSecurityGroupEgress",
                                        "ec2:AuthorizeSecurityGroupEgress",
                                        "ec2:AuthorizeSecurityGroupIngress",
                                        "ec2:RevokeSecurityGroupIngress",
                                        "ec2:CreateNetworkInterface",
                                        "ec2:DescribeNetworkInterfaces",
                                        "ec2:DeleteNetworkInterface",
                                        "ec2:ModifyNetworkInterfaceAttribute",
                                        "ec2:DescribeSubnets",
                                        "ec2:DescribeVpcs",
                                        "ec2:DescribeDhcpOptions",
                                        "ec2:CreateSnapshot",
                                        "ec2:DeleteSnapshot",
                                        "ec2:DescribeSnapshots",
                                        "ec2:StopInstances",
                                        "ec2:GetConsoleOutput",
                                        "ec2:DescribeKeyPairs",
                                        "ec2:DescribeRegions",
                                        "ec2:DeleteTags",
                                        "ec2:DescribeTags",
                                        "cloudformation:CreateStack",
                                        "cloudformation:DeleteStack",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:DescribeStackEvents",
                                        "cloudformation:ValidateTemplate",
                                        "s3:GetObject",
                                        "s3:ListBucket",
                                        "s3:ListAllMyBuckets",
                                        "s3:GetBucketTagging",
                                        "s3:GetBucketLocation",
                                        "s3:CreateBucket",
                                        "kms:List*",
                                        "kms:Describe*",
                                        "ec2:AssociateIamInstanceProfile",
                                        "ec2:DescribeIamInstanceProfileAssociations",
                                        "ec2:DisassociateIamInstanceProfile"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:StartInstances",
                                        "ec2:StopInstances",
                                        "ec2:TerminateInstances",
                                        "ec2:AttachVolume",
                                        "ec2:DetachVolume"
                                    ],
                                    "Condition": {
                                        "StringLike": {
                                            "ec2:ResourceTag/WorkingEnvironment": "*"
                                        }
                                    },
                                    "Resource": [
                                        "arn:aws:ec2:*:*:instance/*"
                                    ]
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ec2:AttachVolume",
                                        "ec2:DetachVolume"
                                    ],
                                    "Resource": [
                                        "arn:aws:ec2:*:*:volume/*"
                                    ]
                                }
                            ]
                        },
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-OCCMPolicy"
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "OCCMInstanceProfile": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "OCCMInstanceIAMRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "OCCMSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Default group for NetApp CloudManager",
                "VpcId": {
                    "Ref": "VPCId"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "-SG"
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "OTCCompleteHandle": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "OTCSetupCompleteCondition": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "OCCMInstance",
            "Properties": {
                "Handle": {
                    "Ref": "OTCCompleteHandle"
                },
                "Timeout": "2400",
                "Count": "1"
            }
        },
		"OTCCompleteHandle2": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "OTCSetupCompleteCondition2": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "OCCMInstance",
            "Properties": {
                "Handle": {
                    "Ref": "OTCCompleteHandle2"
                },
                "Timeout": "2400",
                "Count": "1"
            }
        },
        "OTCCompleteHandle3": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "OTCSetupCompleteCondition3": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "OCCMInstance",
            "Properties": {
                "Handle": {
                    "Ref": "OTCCompleteHandle3"
                },
                "Timeout": "2400",
                "Count": "1"
            }
        },
		"OTCCompleteHandle4": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "OTCSetupCompleteCondition4": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "OCCMInstance",
            "Properties": {
                "Handle": {
                    "Ref": "OTCCompleteHandle4"
                },
                "Timeout": "2400",
                "Count": "1"
            }
        },
		"OTCCompleteHandle5": {
            "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        "OTCSetupCompleteCondition5": {
            "Type": "AWS::CloudFormation::WaitCondition",
            "DependsOn": "OCCMInstance",
            "Properties": {
                "Handle": {
                    "Ref": "OTCCompleteHandle5"
                },
                "Timeout": "2400",
                "Count": "1"
            }
        },

        "OCCMInstance": {
            "DependsOn": [
                "OCCMSecurityGroup",
                "OCCMInstanceProfile"
            ],
            "Type": "AWS::EC2::Instance",
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/occm-params.txt": {
                                "content": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "name|",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "\n",
                                            "customer|",
                                            {
                                                "Ref": "CompanyName"
                                            },
                                            "\n",
                                            "vpcID|",
                                            {
                                                "Ref": "VPCId"
                                            },
                                            "\n",
                                            "subnetID|",
                                            {
                                                "Ref": "SubnetId"
                                            },
                                            "\n",
                                            "region|",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "\n",
                                            "capacity|",
                                            {
                                                "Ref": "Capacity"
                                            },
                                            "\n",
                                            "adminEmail|",
                                            {
                                                "Ref": "CloudManagerUserEmail"
                                            },
                                            "\n",
                                            "adminPassword|",
                                            {
                                                "Ref": "CloudManagerPassword"
                                            },
                                            "\n",
                                            "keyPair|",
                                            {
                                                "Ref": "KeyPair"
                                            },
                                            "\n"
                                        ]
                                    ]
                                },
                                "mode": "000440",
                                "owner": "root",
                                "group": "root"
                            },
                            "/tmp/setup_otc_ha_single_az.sh": {
                                "source": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "https://",
                                            {
                                                "Ref": "QSS3BucketName"
                                            },
                                            ".s3.amazonaws.com/",
                                            {
                                                "Ref": "QSS3KeyPrefix"
                                            },
                                            "/scripts/setup_otc_ha_single_az.sh"
                                        ]
                                    ]
                                },
                                "mode": "000774",
                                "owner": "root",
                                "group": "root"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "DisableApiTermination": "FALSE",
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "NETAPPOCCM"
                    ]
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "True",
                        "DeleteOnTermination": "True",
                        "SubnetId": {
                            "Ref": "SubnetId"
                        },
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "OCCMSecurityGroup"
                            }
                        ]
                    }
                ],
                "InstanceType": "t2.medium",
                "IamInstanceProfile": {
                    "Ref": "OCCMInstanceProfile"
                },
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "Monitoring": "false",
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "\n",
                            [
                                "#!/bin/bash -xe",
                                "export PATH=$PATH:/usr/local/aws/bin/",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz",
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "region=",
                                            {
                                                "Ref": "AWS::Region"
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "otcTemplateHandle=",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "OTCCompleteHandle"
                                                }
                                            }
                                        ]
                                    ]
                                },
								{
                                    "Fn::Join": [
                                        "",
                                        [
                                            "otcTemplateHandle2=",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "OTCCompleteHandle2"
                                                }
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "otcTemplateHandle3=",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "OTCCompleteHandle3"
                                                }
                                            }
                                        ]
                                    ]
                                },
								{
                                    "Fn::Join": [
                                        "",
                                        [
                                            "otcTemplateHandle4=",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "OTCCompleteHandle4"
                                                }
                                            }
                                        ]
                                    ]
                                },
								{
                                    "Fn::Join": [
                                        "",
                                        [
                                            "otcTemplateHandle5=",
                                            {
                                                "Fn::Base64": {
                                                    "Ref": "OTCCompleteHandle5"
                                                }
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "stackName=",
                                            {
                                                "Ref": "AWS::StackName"
                                            }
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "paramFile=",
                                            "/tmp/occm-params.txt"
                                        ]
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "errorFile=",
                                            "/tmp/occmError.txt"
                                        ]
                                    ]
                                },
                                "cfn-init -v  --stack ${stackName} --resource OCCMInstance --region ${region}",
                                "/tmp/setup_otc_ha_single_az.sh ${paramFile} &>> /tmp/bootstrap.log",
                                "result=$?",
                                "echo \"Script result=${result}\" >> /tmp/bootstrap.log",
                                "if [ -f ${errorFile}  ] || [ ${result} -ne \"0\" ]; then",
                                 "cfn-signal -e 1 -r \"Error executing bootsrap script\" --region ${region} ${otcTemplateHandle}",
								 "cfn-signal -e 1 -r \"Error executing bootsrap script\" --region ${region} ${otcTemplateHandle2}",
								 "cfn-signal -e 1 -r \"Error executing bootsrap script\" --region ${region} ${otcTemplateHandle3}",
								 "cfn-signal -e 1 -r \"Error executing bootsrap script\" --region ${region} ${otcTemplateHandle4}",
								 "cfn-signal -e 1 -r \"Error executing bootsrap script\" --region ${region} ${otcTemplateHandle5}",
                                "else",
                                 "cfn-signal -d \"`cat /tmp/mountpoint.txt`\" -i mountPoint --region ${region} ${otcTemplateHandle}\n",
								"cfn-signal -d \"`cat /tmp/iscsiLif.txt`\" -i IscsiLif --region ${region} ${otcTemplateHandle2}",
                                "cfn-signal -d \"`cat /tmp/clusterLif.txt`\" -i ClusterLif --region ${region} ${otcTemplateHandle3}",
								"cfn-signal -d \"`cat /tmp/nasLif.txt`\" -i NasLif --region ${region} ${otcTemplateHandle4}\n",
								"cfn-signal -d \"`cat /tmp/svmName.txt`\" -i SVMName --region ${region} ${otcTemplateHandle5}\n",
								"fi",
                                "sed -i \"s/$(grep 'adminPassword' ${paramFile} | awk -F'|' '{print $2}')/xxxxx/g\" /tmp/bootstrap.log",
                                "rm ${paramFile}"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "_CloudManager"
                                ]
                            ]
                        }
                    },
                    {
                        "Key": "CloudFormation Stack",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "OCCMInstanceId": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value": {
                "Ref": "OCCMInstance"
            }
        },
        "OCCMInstanceProfile": {
            "Description": "Instance profile used by CloudManager",
            "Value": {
                "Ref": "OCCMInstanceProfile"
            }
        },
        "CloudManagerURL": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt": [
                                "OCCMInstance",
                                "PublicIp"
                            ]
                        }
                    ]
                ]
            },
            "Description": "CloudManager URL"
        },
        "ONTAPCloudSvmName": {
            "Value": {
                "Fn::GetAtt": [
                    "OTCSetupCompleteCondition5",
                    "Data"
                ]
            },
            "Description": "SVM Name for the OTC Environment"
        },
        "MountPoint": {
            "Value": {
                "Fn::GetAtt": [
                    "OTCSetupCompleteCondition",
                    "Data"
                ]
            },
            "Description": "Mount command to run on the Linux host"
        },
		"IscsiDataLif": {
            "Value": {
                "Fn::GetAtt": [
                    "OTCSetupCompleteCondition2",
                    "Data"
                ]
            },
            "Description": "IP address of the iSCSI Data LIF"
        },
        "ClusterManagementLif": {
            "Value": {
                "Fn::GetAtt": [
                    "OTCSetupCompleteCondition3",
                    "Data"
                ]
            },
            "Description": "IP address of the Cluster Management LIF"
        },
        "NFSDataLif": {
            "Value": {
                "Fn::GetAtt": [
                    "OTCSetupCompleteCondition4",
                    "Data"
                ]
            },
            "Description": "IP address of the NFS Data LIF"
        }
    }
}